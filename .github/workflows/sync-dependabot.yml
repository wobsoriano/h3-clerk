name: Dependency Update Changeset

on:
  pull_request:
    types: [opened, labeled, synchronize]

jobs:
  create-changeset:
    if: contains(github.event.pull_request.labels.*.name, 'dependencies')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0
      - uses: pnpm/action-setup@v4
        with:
          version: 8.6.3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: pnpm

      - run: pnpm install

      - name: Create and push changeset
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs');
            const path = require('path');

            async function run() {
              try {
                const prBody = context.payload.pull_request.body;
                const updates = [];
                const regex = /Updates `([^`]+)` from ([0-9.]+) to ([0-9.]+)/g;
                let match;

                while ((match = regex.exec(prBody)) !== null) {
                  updates.push(`${match[1]} to ${match[3]}`);
                }

                if (updates.length === 0) {
                  core.info('No package updates found in PR body');
                  return;
                }

                const changesetDir = path.join(process.env.GITHUB_WORKSPACE, '.changeset');
                fs.mkdirSync(changesetDir, { recursive: true });

                const changesetPath = path.join(changesetDir, `dependency-update-${Date.now()}.md`);
                const changesetContent = `---
            "${context.repo.owner}/${context.repo.repo}": patch
            ---

            Bump ${updates.join(', ')}
            `;

                            fs.writeFileSync(changesetPath, changesetContent);

                            // Push changes
                            await exec.exec('git', ['config', '--local', 'user.email', 'action@github.com']);
                            await exec.exec('git', ['config', '--local', 'user.name', 'GitHub Action']);
                            await exec.exec('git', ['add', '.changeset']);
                            await exec.exec('git', ['commit', '-m', 'Add changeset for dependency update PR']);
                            await exec.exec('git', ['push', 'origin', `HEAD:${context.payload.pull_request.head.ref}`]);

                            core.info('Changeset created and pushed successfully');
                          } catch (error) {
                            core.setFailed(`Action failed with error: ${error}`);
                          }
                        }

                        run();
